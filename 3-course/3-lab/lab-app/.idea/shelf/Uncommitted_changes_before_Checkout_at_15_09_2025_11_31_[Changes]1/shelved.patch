Index: index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"uk\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Система управління бібліотекою</title>\r\n    <link href=\"libs/bootstrap.css\" rel=\"stylesheet\">\r\n    <link rel=\"stylesheet\" href=\"dist/styles.css\">\r\n    <script src=\"dist/bundle.js\"></script>\r\n\r\n</head>\r\n<body class=\"bg-light\">\r\n\r\n<div class=\"container py-5\">\r\n\r\n    <!-- Заголовок -->\r\n    <h1 class=\"text-center mb-5 display-4 fw-bold\">\r\n        Система управління бібліотекою\r\n    </h1>\r\n\r\n    <!-- Додати книгу -->\r\n    <div class=\"card shadow-sm mb-4\">\r\n        <div class=\"card-header bg-primary text-white\">\r\n            Додати книгу\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <form id=\"bookForm\" class=\"row g-3\" novalidate>\r\n                <div class=\"col-md-4\">\r\n                    <label for=\"bookTitle\" class=\"form-label\">Назва книги</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"bookTitle\" required>\r\n                    <div class=\"invalid-feedback\" id=\"bookTitleError\"></div>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <label for=\"bookAuthor\" class=\"form-label\">Автор</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"bookAuthor\" required>\r\n                    <div class=\"invalid-feedback\" id=\"bookAuthorError\"></div>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <label for=\"bookYear\" class=\"form-label\">Рік видання</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"bookYear\" min=\"0\" required>\r\n                    <div class=\"invalid-feedback\" id=\"bookYearError\"></div>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <button type=\"submit\" class=\"btn btn-success\">Додати книгу</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Додати користувача -->\r\n    <div class=\"card shadow-sm mb-4\">\r\n        <div class=\"card-header bg-secondary text-white\">\r\n            Додати користувача\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <form id=\"userForm\" class=\"row g-3\">\r\n                <div class=\"col-md-6\">\r\n                    <label for=\"userName\" class=\"form-label\">Ім’я користувача</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"userName\" required>\r\n                    <div id=\"userNameError\" class=\"invalid-feedback\"></div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <label for=\"userEmail\" class=\"form-label\">Email</label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"userEmail\" required>\r\n                    <div id=\"userEmailError\" class=\"invalid-feedback\"></div>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Додати користувача</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row g-3 mb-3\">\r\n        <div class=\"col-md-8\">\r\n            <input type=\"text\" id=\"searchQuery\" class=\"form-control\" placeholder=\"Пошук книги за назвою або автором\">\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <button id=\"searchBtn\" class=\"btn btn-primary w-100\">Пошук</button>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <!-- Список книг -->\r\n    <div class=\"card shadow-sm mb-4\">\r\n        <div class=\"card-header bg-dark text-white\">\r\n            Список книг\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <ul id=\"booksList\" class=\"list-group\">\r\n                <!-- Тут динамічно зʼявлятимуться книги -->\r\n            </ul>\r\n            <div id=\"booksPagination\" class=\"mt-3\"></div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <!-- Список користувачів -->\r\n    <div class=\"card shadow-sm mb-4\">\r\n        <div class=\"card-header bg-dark text-white\">\r\n            Список користувачів\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <ul id=\"usersList\" class=\"list-group\">\r\n                <!-- Тут динамічно зʼявлятимуться користувачі -->\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <!-- Контейнер для toast-повідомлень -->\r\n<!--    <div id=\"notifications\" class=\"position-fixed bottom-0 end-0 p-3\" style=\"z-index: 1050;\"></div>-->\r\n\r\n    <!-- Модальне вікно Bootstrap для позичання книги -->\r\n    <div class=\"modal fade\" id=\"borrowModal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content p-3\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">Позичання книги</h5>\r\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <label for=\"borrowUserId\" class=\"form-label\">Введіть ID користувача:</label>\r\n                    <input type=\"number\" id=\"borrowUserId\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button id=\"confirmBorrowBtn\" class=\"btn btn-primary\">Позичити</button>\r\n                    <button class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Відмінити</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <!-- Модальне вікно для повідомлень -->\r\n    <div class=\"modal fade\" id=\"notificationModal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content p-3\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"notificationTitle\">Повідомлення</h5>\r\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"modal-body\" id=\"notificationBody\">\r\n                    <!-- Текст повідомлення з'являється тут -->\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">Зрозуміло</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n<script src=\"dist/bundle.js\"></script>\r\n\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/index.html b/index.html
--- a/index.html	(revision 354779eadc43f8b79412f2a614327bf1d3205388)
+++ b/index.html	(date 1757922991657)
@@ -152,8 +152,8 @@
 
 </div>
 
-<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
 <script src="dist/bundle.js"></script>
+<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
 
 </body>
 </html>
Index: src/services.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {Book, User, IBook, IUser} from './models';\r\nimport {Library} from './library';\r\nimport {IStorage} from \"./storage\";\r\n\r\nexport class LibraryService<T extends { toString(): string; }> {\r\n    private items: T[] = [];\r\n\r\n    public add(item: T): void {\r\n        this.items.push(item);\r\n    }\r\n\r\n    public remove(predicate: (item: T) => boolean): void {\r\n        this.items = this.items.filter(item => !predicate(item));\r\n    }\r\n\r\n    public find(predicate: (item: T) => boolean): T | undefined {\r\n        return this.items.find(predicate);\r\n    }\r\n\r\n    public getAll(): T[] {\r\n        return [...this.items];\r\n    }\r\n\r\n    public count(): number {\r\n        return this.items.length;\r\n    }\r\n}\r\n\r\nexport class BookService {\r\n    private storage = new IStorage();\r\n    private books: Book[] = [];\r\n\r\n    constructor() {\r\n        const saved = this.storage.get<Book[]>('books');\r\n        if (saved) {\r\n            this.books = saved.map(b => new Book(b.title, b.author, b.year, b.borrowedById));\r\n        }\r\n    }\r\n\r\n    public add(book: Book): void {\r\n        this.books.push(book);\r\n        this.save();\r\n    }\r\n\r\n    public getAll(): Book[] {\r\n        return [...this.books];\r\n    }\r\n\r\n    public borrow(book: Book, userId: number): void {\r\n        const index = this.books.findIndex(b => b.getTitle() === book.getTitle() && b.getAuthor() === book.getAuthor() && b.getYear() === book.getYear());\r\n        if (index !== -1) {\r\n            this.books[index].borrow(userId);  // оновлюємо конкретну книгу\r\n            this.save();  // зберігаємо весь масив\r\n        }\r\n    }\r\n\r\n    public returnBook(book: Book): void {\r\n        const index = this.books.findIndex(\r\n            b => b.getTitle() === book.getTitle() &&\r\n                b.getAuthor() === book.getAuthor() &&\r\n                b.getYear() === book.getYear()\r\n        );\r\n\r\n        if (index !== -1) {\r\n            this.books[index].returnBook();\r\n            this.save();\r\n        }\r\n    }\r\n\r\n    save() {\r\n        this.storage.set('books', this.books);\r\n    }\r\n\r\n    public search(query: string): Book[] {\r\n        const lowerQuery = query.toLowerCase();\r\n        return this.books.filter(b =>\r\n            b.getTitle().toLowerCase().includes(lowerQuery) ||\r\n            b.getAuthor().toLowerCase().includes(lowerQuery)\r\n        );\r\n    }\r\n\r\n    public remove(book: Book): void {\r\n        this.books = this.books.filter(b => b !== book);\r\n        this.storage.set('books', this.books);\r\n    }\r\n}\r\n\r\nexport class UserService {\r\n    private storage = new IStorage();\r\n    private users: User[] = [];\r\n\r\n    constructor() {\r\n        const saved = this.storage.get<User[]>('users');\r\n        if (saved) {\r\n            this.users = saved.map(u => new User(u.name, u.email))\r\n        }\r\n    }\r\n\r\n    public add(user: User): void {\r\n        this.users.push(user);\r\n        this.save();\r\n    }\r\n\r\n    public getAll(): User[] {\r\n        return [...this.users];\r\n    }\r\n\r\n    private save(): void {\r\n        this.storage.set('users', this.users);\r\n    }\r\n\r\n    public remove(user: User): void {\r\n        this.users = this.users.filter(u => u !== user);\r\n        this.storage.set('users', this.users);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services.ts b/src/services.ts
--- a/src/services.ts	(revision 354779eadc43f8b79412f2a614327bf1d3205388)
+++ b/src/services.ts	(date 1757924830192)
@@ -94,6 +94,7 @@
         if (saved) {
             this.users = saved.map(u => new User(u.name, u.email))
         }
+        console.log(this.users)
     }
 
     public add(user: User): void {
Index: src/app.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// import all modules here\r\nimport {Book, User} from './models';\r\nimport {BookService, LibraryService, UserService} from './services';\r\nimport {Validation} from \"./validation\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/main.scss';\r\n\r\n\r\n// etc.\r\nclass App {\r\n    private bookService = new BookService();\r\n    private userService = new UserService();\r\n    private currentBookToBorrow: Book | null = null;\r\n\r\n    constructor() {\r\n        this.bindForms();\r\n        this.renderBooks();\r\n        this.bindSearch();\r\n        this.renderUsers();\r\n    }\r\n\r\n    // --- Сповіщення через Bootstrap toast ---\r\n    private notify(message: string, type: \"success\" | \"danger\" | \"info\" = \"info\") {\r\n        const container = document.getElementById(\"notifications\")!;\r\n        const toast = document.createElement(\"div\");\r\n        toast.className = `toast align-items-center text-white bg-${type} border-0 mb-2`;\r\n        toast.role = \"alert\";\r\n        toast.setAttribute(\"aria-live\", \"assertive\");\r\n        toast.setAttribute(\"aria-atomic\", \"true\");\r\n\r\n        toast.innerHTML = `\r\n            <div class=\"d-flex\">\r\n                <div class=\"toast-body\">${message}</div>\r\n                <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\r\n            </div>\r\n        `;\r\n\r\n        container.appendChild(toast);\r\n        const bsToast = new (window as any).bootstrap.Toast(toast, {delay: 3000});\r\n        bsToast.show();\r\n        toast.addEventListener('hidden.bs.toast', () => toast.remove());\r\n    }\r\n\r\n    // --- Кнопки модального вікна позичання ---\r\n    bindModalButtons() {\r\n        const confirmBtn = document.getElementById(\"confirmBorrowBtn\")!;\r\n        const modalEl = document.getElementById(\"borrowModal\")!;\r\n\r\n        confirmBtn.addEventListener(\"click\", () => {\r\n            const input = document.getElementById(\"borrowUserId\") as HTMLInputElement;\r\n            const userId = Number(input.value);\r\n\r\n            if (isNaN(userId)) {\r\n                this.showNotification(\"Введіть коректний числовий ID користувача!\", \"danger\");\r\n                return;\r\n            }\r\n\r\n            const user = this.userService.getAll().find(u => u.getId() === userId);\r\n            if (!user) {\r\n                this.showNotification(\"Користувача з таким ID не знайдено!\", \"danger\");\r\n                return;\r\n            }\r\n\r\n            if (!this.currentBookToBorrow) return;\r\n\r\n            const borrowedBooksCount = this.bookService.getAll().filter(b => b.getBorrowedBy() === userId).length;\r\n            if (borrowedBooksCount >= 3) {\r\n                this.showNotification(\"Користувач не може позичити більше 3 книг!\", \"danger\");\r\n                return;\r\n            }\r\n\r\n            this.bookService.borrow(this.currentBookToBorrow, userId);\r\n            this.showNotification(`Книга \"${this.currentBookToBorrow.getTitle()}\" успішно позичена користувачу #${userId}`, \"success\");\r\n            this.currentBookToBorrow = null;\r\n            this.renderBooks();\r\n            input.value = \"\";\r\n\r\n            (window as any).bootstrap.Modal.getInstance(modalEl)?.hide();\r\n        });\r\n    }\r\n\r\n    // --- Додавання книги ---\r\n    private handleAddBook(event: Event) {\r\n        event.preventDefault();\r\n\r\n        const titleInput = document.getElementById(\"bookTitle\") as HTMLInputElement;\r\n        const authorInput = document.getElementById(\"bookAuthor\") as HTMLInputElement;\r\n        const yearInput = document.getElementById(\"bookYear\") as HTMLInputElement;\r\n\r\n        // блоки для помилок\r\n        const titleError = document.getElementById(\"bookTitleError\") as HTMLDivElement;\r\n        const authorError = document.getElementById(\"bookAuthorError\") as HTMLDivElement;\r\n        const yearError = document.getElementById(\"bookYearError\") as HTMLDivElement;\r\n\r\n        // очищаємо попередні помилки\r\n        titleInput.classList.remove(\"is-invalid\");\r\n        authorInput.classList.remove(\"is-invalid\");\r\n        yearInput.classList.remove(\"is-invalid\");\r\n        titleError.textContent = \"\";\r\n        authorError.textContent = \"\";\r\n        yearError.textContent = \"\";\r\n\r\n        let hasError = false;\r\n\r\n        const title = titleInput.value.trim();\r\n        const author = authorInput.value.trim();\r\n        const year = yearInput.value.trim();\r\n\r\n        if (!Validation.required(title)) {\r\n            titleInput.classList.add(\"is-invalid\");\r\n            titleError.textContent = \"Назва книги обов'язкова!\";\r\n            hasError = true;\r\n        }\r\n        if (!Validation.required(author)) {\r\n            authorInput.classList.add(\"is-invalid\");\r\n            authorError.textContent = \"Автор обов'язковий!\";\r\n            hasError = true;\r\n        }\r\n        if (!Validation.required(year)) {\r\n            yearInput.classList.add(\"is-invalid\");\r\n            yearError.textContent = \"Рік видання обов'язковий!\";\r\n            hasError = true;\r\n        } else if (!Validation.isNumber(year)) {\r\n            yearInput.classList.add(\"is-invalid\");\r\n            yearError.textContent = \"Рік видання має бути числом!\";\r\n            hasError = true;\r\n        } else if (!Validation.isYear(year)) {\r\n            yearInput.classList.add(\"is-invalid\");\r\n            yearError.textContent = \"Введіть коректний рік (1000–2999)!\";\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) return;\r\n\r\n        const book = new Book(title, author, Number(year));\r\n        this.bookService.add(book);\r\n        this.renderBooks();\r\n        (event.target as HTMLFormElement).reset();\r\n        //this.showNotification(`Книга \"${title}\" додана успішно`, \"success\");\r\n    }\r\n\r\n    // --- Додавання користувача ---\r\n    private handleAddUser(event: Event) {\r\n        event.preventDefault();\r\n\r\n        const nameInput = document.getElementById(\"userName\") as HTMLInputElement;\r\n        const emailInput = document.getElementById(\"userEmail\") as HTMLInputElement;\r\n\r\n        const nameError = document.getElementById(\"userNameError\") as HTMLDivElement;\r\n        const emailError = document.getElementById(\"userEmailError\") as HTMLDivElement;\r\n\r\n        // очищаємо попередні помилки\r\n        nameInput.classList.remove(\"is-invalid\");\r\n        emailInput.classList.remove(\"is-invalid\");\r\n        nameError.textContent = \"\";\r\n        emailError.textContent = \"\";\r\n\r\n        let hasError = false;\r\n\r\n        const name = nameInput.value.trim();\r\n        const email = emailInput.value.trim();\r\n\r\n        if (!Validation.required(name)) {\r\n            nameInput.classList.add(\"is-invalid\");\r\n            nameError.textContent = \"Ім'я користувача обов'язкове!\";\r\n            hasError = true;\r\n        }\r\n\r\n        if (!Validation.required(email)) {\r\n            emailInput.classList.add(\"is-invalid\");\r\n            emailError.textContent = \"Email обов'язковий!\";\r\n            hasError = true;\r\n        } else if (!Validation.isEmail(email)) {\r\n            emailInput.classList.add(\"is-invalid\");\r\n            emailError.textContent = \"Введіть коректний Email!\";\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) return;\r\n\r\n        const newUser = new User(name, email);\r\n        this.userService.add(newUser);\r\n        this.renderUsers();\r\n        (event.target as HTMLFormElement).reset();\r\n        //this.showNotification(`Користувач \"${name}\" доданий успішно`, \"success\");\r\n    }\r\n\r\n    private bindSearch() {\r\n        const searchBtn = document.getElementById(\"searchBtn\") as HTMLButtonElement;\r\n        const searchInput = document.getElementById(\"searchQuery\") as HTMLInputElement;\r\n\r\n        searchBtn.addEventListener(\"click\", () => {\r\n            const query = searchInput.value.trim();\r\n            if (!query) {\r\n                this.renderBooks(); // якщо пусто — показуємо всі книги\r\n                return;\r\n            }\r\n            const results = this.bookService.search(query);\r\n            this.renderBooks(results);\r\n        });\r\n    }\r\n\r\n    // --- Відображення книг ---\r\n    private currentPage = 1;\r\n    private itemsPerPage = 5;\r\n\r\n    private renderBooks(books: Book[] = this.bookService.getAll()) {\r\n        const booksList = document.getElementById(\"booksList\") as HTMLUListElement;\r\n        booksList.innerHTML = \"\";\r\n\r\n        const totalItems = books.length;\r\n        const totalPages = Math.ceil(totalItems / this.itemsPerPage);\r\n\r\n        // Вираховуємо книги для поточної сторінки\r\n        const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n        const endIndex = startIndex + this.itemsPerPage;\r\n        const pageBooks = books.slice(startIndex, endIndex);\r\n\r\n        pageBooks.forEach(book => {\r\n            const li = document.createElement(\"li\");\r\n            li.className = \"list-group-item d-flex justify-content-between align-items-center\";\r\n\r\n            const span = document.createElement(\"span\");\r\n            span.textContent = book.toString();\r\n            li.appendChild(span);\r\n\r\n            // кнопки\r\n            const btnGroup = document.createElement(\"div\");\r\n            btnGroup.className = \"d-flex\";\r\n\r\n            const borrowBtn = document.createElement(\"button\");\r\n            borrowBtn.className = book.isBorrowed() ? \"btn btn-sm btn-warning me-2\" : \"btn btn-sm btn-primary me-2\";\r\n            borrowBtn.textContent = book.isBorrowed() ? \"Повернути\" : \"Позичити\";\r\n            borrowBtn.addEventListener(\"click\", () => this.handleBorrowReturn(book, borrowBtn));\r\n            btnGroup.appendChild(borrowBtn);\r\n\r\n            const deleteBtn = document.createElement(\"button\");\r\n            deleteBtn.className = \"btn btn-sm btn-danger\";\r\n            deleteBtn.textContent = \"Видалити\";\r\n            deleteBtn.addEventListener(\"click\", () => {\r\n                this.bookService.remove(book);\r\n                this.renderBooks();\r\n                this.notify(`Книга \"${book.getTitle()}\" видалена`, \"danger\");\r\n            });\r\n            btnGroup.appendChild(deleteBtn);\r\n\r\n            li.appendChild(btnGroup);\r\n            booksList.appendChild(li);\r\n        });\r\n\r\n        // Рендеримо пагінацію\r\n        this.renderBookPagination(totalPages);\r\n    }\r\n\r\n    private renderBookPagination(totalPages: number) {\r\n        const pagination = document.getElementById(\"booksPagination\") as HTMLDivElement;\r\n        pagination.innerHTML = \"\";\r\n\r\n        if (totalPages <= 1) return; // якщо тільки 1 сторінка — не показуємо\r\n\r\n        const nav = document.createElement(\"nav\");\r\n        const ul = document.createElement(\"ul\");\r\n        ul.className = \"pagination justify-content-center mt-3\";\r\n\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            const li = document.createElement(\"li\");\r\n            li.className = `page-item ${i === this.currentPage ? \"active\" : \"\"}`;\r\n\r\n            const btn = document.createElement(\"button\");\r\n            btn.className = \"page-link\";\r\n            btn.textContent = i.toString();\r\n            btn.addEventListener(\"click\", () => {\r\n                this.currentPage = i;\r\n                this.renderBooks();\r\n            });\r\n\r\n            li.appendChild(btn);\r\n            ul.appendChild(li);\r\n        }\r\n\r\n        nav.appendChild(ul);\r\n        pagination.appendChild(nav);\r\n    }\r\n\r\n\r\n\r\n    // --- Відображення користувачів ---\r\n    private renderUsers(users?: User[]) {\r\n        const usersList = document.getElementById(\"usersList\") as HTMLUListElement;\r\n        usersList.innerHTML = \"\";\r\n\r\n        (users ?? this.userService.getAll()).forEach(user => {\r\n            const li = document.createElement(\"li\");\r\n            li.className = \"list-group-item d-flex justify-content-between align-items-center\";\r\n\r\n            const span = document.createElement(\"span\");\r\n            span.textContent = user.toString();\r\n            li.appendChild(span);\r\n\r\n            // Кнопка Видалити\r\n            const btnDelete = document.createElement(\"button\");\r\n            btnDelete.className = \"btn btn-sm btn-danger\";\r\n            btnDelete.textContent = \"Видалити\";\r\n            btnDelete.addEventListener(\"click\", () => {\r\n\r\n                // 1. Повертаємо всі книги, які позичив цей юзер\r\n                this.bookService.getAll().forEach(book => {\r\n                    if (book.getBorrowedBy() === user.getId()) {\r\n                        book.returnBook();\r\n                    }\r\n                });\r\n                this.bookService.save(); // зберігаємо зміни в localStorage\r\n\r\n                // 2. Видаляємо юзера\r\n                this.userService.remove(user);\r\n\r\n                // 3. Повідомлення + оновлення списків\r\n                this.showNotification(`Користувач \"${user.getName()}\" видалений. Усі його книги повернені.`, \"danger\");\r\n                this.renderUsers();\r\n                this.renderBooks();\r\n            });\r\n\r\n            li.appendChild(btnDelete);\r\n            usersList.appendChild(li);\r\n        });\r\n    }\r\n\r\n\r\n    private bindForms() {\r\n        const bookForm = document.getElementById(\"bookForm\") as HTMLFormElement;\r\n        const userForm = document.getElementById(\"userForm\") as HTMLFormElement;\r\n\r\n        bookForm.addEventListener(\"submit\", (e) => this.handleAddBook(e));\r\n        userForm.addEventListener(\"submit\", (e) => this.handleAddUser(e));\r\n    }\r\n\r\n    private showNotification(message: string, title: string = \"Повідомлення\") {\r\n        const modalEl = document.getElementById(\"notificationModal\")!;\r\n        const modalTitle = document.getElementById(\"notificationTitle\")!;\r\n        const modalBody = document.getElementById(\"notificationBody\")!;\r\n\r\n        modalTitle.textContent = title;\r\n        modalBody.textContent = message;\r\n\r\n        const modal = new (window as any).bootstrap.Modal(modalEl);\r\n        modal.show();\r\n    }\r\n\r\n    private handleBorrowReturn(book: Book, btn: HTMLButtonElement) {\r\n        if (book.isBorrowed()) {\r\n            this.bookService.returnBook(book);\r\n            btn.textContent = \"Позичити\";\r\n            btn.className = \"btn btn-sm btn-primary me-2\";\r\n            this.notify(`Книга \"${book.getTitle()}\" повернена`, \"info\");\r\n        } else {\r\n            this.currentBookToBorrow = book;\r\n            const modalEl = document.getElementById(\"borrowModal\");\r\n            if (!modalEl) return;\r\n            const modal = new (window as any).bootstrap.Modal(modalEl);\r\n            modal.show();\r\n        }\r\n    }\r\n\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const app = new App();\r\n    app.bindModalButtons(); // тут DOM вже повністю завантажений\r\n});\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app.ts b/src/app.ts
--- a/src/app.ts	(revision 354779eadc43f8b79412f2a614327bf1d3205388)
+++ b/src/app.ts	(date 1757924918302)
@@ -56,7 +56,7 @@
                 return;
             }
 
-            const user = this.userService.getAll().find(u => u.getId() === userId);
+            const user = this.userService.getAll().find(u => u.getId() === Number(userId));
             if (!user) {
                 this.showNotification("Користувача з таким ID не знайдено!", "danger");
                 return;
@@ -340,12 +340,31 @@
         const modalTitle = document.getElementById("notificationTitle")!;
         const modalBody = document.getElementById("notificationBody")!;
 
+        // оновлюємо контент
         modalTitle.textContent = title;
         modalBody.textContent = message;
 
-        const modal = new (window as any).bootstrap.Modal(modalEl);
+        // 1. Беремо існуючий інстанс або створюємо новий
+        let modal = (window as any).bootstrap.Modal.getInstance(modalEl);
+        if (!modal) {
+            modal = new (window as any).bootstrap.Modal(modalEl, {
+                backdrop: true, // залишаємо фон
+                keyboard: true  // можна закрити Esc
+            });
+        }
+
+        // 2. Відкриваємо
         modal.show();
+
+        // 3. При закритті прибираємо "залипання" backdrop
+        modalEl.addEventListener("hidden.bs.modal", () => {
+            document.querySelectorAll(".modal-backdrop").forEach(el => el.remove());
+            document.body.classList.remove("modal-open");
+            document.body.style.removeProperty("padding-right");
+        }, { once: true });
     }
+
+
 
     private handleBorrowReturn(book: Book, btn: HTMLButtonElement) {
         if (book.isBorrowed()) {
Index: ../../1-lab/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"eb1e79f2-977a-4f44-91f9-023f84f446b6\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"TypeScript File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/../..\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"32NgULuMXXzJTCu2xzws17JiYOj\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/унік/web-programming/web-technologies/3-course/1-lab&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_interpreter_path&quot;: &quot;C:/Users/Admin_/AppData/Roaming/JetBrains/WebStorm2024.3/node/versions/22.19.0/node&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;npm.build.executor&quot;: &quot;Run&quot;,\r\n    &quot;ts.external.directory.path&quot;: &quot;D:\\\\унік\\\\web-programming\\\\web-technologies\\\\3-course\\\\1-lab\\\\node_modules\\\\typescript\\\\lib&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\унік\\web-programming\\web-technologies\\3-course\\1-lab\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"build\" type=\"js.build_tools.npm\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <package-json value=\"$PROJECT_DIR$/package.json\" />\r\n      <command value=\"run\" />\r\n      <scripts>\r\n        <script value=\"build\" />\r\n      </scripts>\r\n      <node-interpreter value=\"project\" />\r\n      <envs />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"npm.build\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-76f8388c3a79-JavaScript-WS-243.24978.60\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"eb1e79f2-977a-4f44-91f9-023f84f446b6\" name=\"Changes\" comment=\"\" />\r\n      <created>1757266459294</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1757266459294</updated>\r\n      <workItem from=\"1757266460373\" duration=\"7034000\" />\r\n      <workItem from=\"1757276494476\" duration=\"1456000\" />\r\n      <workItem from=\"1757277997570\" duration=\"167000\" />\r\n      <workItem from=\"1757309601859\" duration=\"1637000\" />\r\n      <workItem from=\"1757846205706\" duration=\"741000\" />\r\n      <workItem from=\"1757861252518\" duration=\"594000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n    <option name=\"exactExcludedFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/src/icecream.js\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../1-lab/.idea/workspace.xml b/../../1-lab/.idea/workspace.xml
--- a/../../1-lab/.idea/workspace.xml	(revision 354779eadc43f8b79412f2a614327bf1d3205388)
+++ b/../../1-lab/.idea/workspace.xml	(date 1757922659017)
@@ -29,23 +29,23 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;last_opened_file_path&quot;: &quot;D:/унік/web-programming/web-technologies/3-course/1-lab&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_interpreter_path&quot;: &quot;C:/Users/Admin_/AppData/Roaming/JetBrains/WebStorm2024.3/node/versions/22.19.0/node&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;npm.build.executor&quot;: &quot;Run&quot;,
-    &quot;ts.external.directory.path&quot;: &quot;D:\\унік\\web-programming\\web-technologies\\3-course\\1-lab\\node_modules\\typescript\\lib&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.git.unshallow": "true",
+    "git-widget-placeholder": "main",
+    "last_opened_file_path": "D:/унік/web-programming/web-technologies/3-course/3-lab/lab-app",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_interpreter_path": "C:/Users/Admin_/AppData/Roaming/JetBrains/WebStorm2024.3/node/versions/22.19.0/node",
+    "nodejs_package_manager_path": "npm",
+    "npm.build.executor": "Run",
+    "ts.external.directory.path": "D:\\унік\\web-programming\\web-technologies\\3-course\\1-lab\\node_modules\\typescript\\lib",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="D:\унік\web-programming\web-technologies\3-course\1-lab" />
@@ -88,7 +88,8 @@
       <workItem from="1757277997570" duration="167000" />
       <workItem from="1757309601859" duration="1637000" />
       <workItem from="1757846205706" duration="741000" />
-      <workItem from="1757861252518" duration="594000" />
+      <workItem from="1757861252518" duration="595000" />
+      <workItem from="1757922631198" duration="26000" />
     </task>
     <servers />
   </component>
Index: dist/bundle.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/******/ (() => { // webpackBootstrap\r\n/******/ \t\"use strict\";\r\n/******/ \tvar __webpack_modules__ = ({\r\n\r\n/***/ \"./node_modules/bootstrap/dist/css/bootstrap.min.css\":\r\n/*!***********************************************************!*\\\r\n  !*** ./node_modules/bootstrap/dist/css/bootstrap.min.css ***!\r\n  \\***********************************************************/\r\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\r\n\r\n__webpack_require__.r(__webpack_exports__);\r\n// extracted by mini-css-extract-plugin\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/models.ts\":\r\n/*!***********************!*\\\r\n  !*** ./src/models.ts ***!\r\n  \\***********************/\r\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\r\n\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\r\n/* harmony export */   Book: () => (/* binding */ Book),\r\n/* harmony export */   User: () => (/* binding */ User)\r\n/* harmony export */ });\r\nvar Book = (function () {\r\n    function Book(title, author, year, borrowedById) {\r\n        if (borrowedById === void 0) { borrowedById = null; }\r\n        this.borrowedById = null;\r\n        this.title = title;\r\n        this.author = author;\r\n        this.year = year;\r\n        this.borrowedById = borrowedById;\r\n    }\r\n    Book.prototype.getTitle = function () { return this.title; };\r\n    Book.prototype.getAuthor = function () { return this.author; };\r\n    Book.prototype.getYear = function () { return this.year; };\r\n    Book.prototype.isBorrowed = function () { return this.borrowedById !== null; };\r\n    Book.prototype.borrow = function (userId) {\r\n        if (this.borrowedById)\r\n            throw new Error(\"Книга вже позичена!\");\r\n        this.borrowedById = userId;\r\n    };\r\n    Book.prototype.returnBook = function () {\r\n        this.borrowedById = null;\r\n    };\r\n    Book.prototype.getBorrowedBy = function () {\r\n        return this.borrowedById;\r\n    };\r\n    Book.prototype.toString = function () {\r\n        return \"\".concat(this.title, \" \\u2014 \").concat(this.author, \" (\").concat(this.year, \")\") +\r\n            (this.borrowedById ? \" [\\u041F\\u043E\\u0437\\u0438\\u0447\\u0435\\u043D\\u0430 \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0435\\u043C #\".concat(this.borrowedById, \"]\") : '');\r\n    };\r\n    return Book;\r\n}());\r\n\r\nvar User = (function () {\r\n    function User(name, email) {\r\n        this.id = User.nextId++;\r\n        this.name = name;\r\n        this.email = email;\r\n    }\r\n    User.prototype.getId = function () {\r\n        return this.id;\r\n    };\r\n    User.prototype.getName = function () {\r\n        return this.name;\r\n    };\r\n    User.prototype.getEmail = function () {\r\n        return this.email;\r\n    };\r\n    User.prototype.toString = function () {\r\n        return \"#\".concat(this.id, \" \").concat(this.name, \" (\").concat(this.email, \")\");\r\n    };\r\n    User.nextId = 1;\r\n    return User;\r\n}());\r\n\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/services.ts\":\r\n/*!*************************!*\\\r\n  !*** ./src/services.ts ***!\r\n  \\*************************/\r\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\r\n\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\r\n/* harmony export */   BookService: () => (/* binding */ BookService),\r\n/* harmony export */   LibraryService: () => (/* binding */ LibraryService),\r\n/* harmony export */   UserService: () => (/* binding */ UserService)\r\n/* harmony export */ });\r\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./models */ \"./src/models.ts\");\r\n/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storage */ \"./src/storage.ts\");\r\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\n\r\n\r\nvar LibraryService = (function () {\r\n    function LibraryService() {\r\n        this.items = [];\r\n    }\r\n    LibraryService.prototype.add = function (item) {\r\n        this.items.push(item);\r\n    };\r\n    LibraryService.prototype.remove = function (predicate) {\r\n        this.items = this.items.filter(function (item) { return !predicate(item); });\r\n    };\r\n    LibraryService.prototype.find = function (predicate) {\r\n        return this.items.find(predicate);\r\n    };\r\n    LibraryService.prototype.getAll = function () {\r\n        return __spreadArray([], this.items, true);\r\n    };\r\n    LibraryService.prototype.count = function () {\r\n        return this.items.length;\r\n    };\r\n    return LibraryService;\r\n}());\r\n\r\nvar BookService = (function () {\r\n    function BookService() {\r\n        this.storage = new _storage__WEBPACK_IMPORTED_MODULE_1__.IStorage();\r\n        this.books = [];\r\n        var saved = this.storage.get('books');\r\n        if (saved) {\r\n            this.books = saved.map(function (b) { return new _models__WEBPACK_IMPORTED_MODULE_0__.Book(b.title, b.author, b.year, b.borrowedById); });\r\n        }\r\n    }\r\n    BookService.prototype.add = function (book) {\r\n        this.books.push(book);\r\n        this.save();\r\n    };\r\n    BookService.prototype.getAll = function () {\r\n        return __spreadArray([], this.books, true);\r\n    };\r\n    BookService.prototype.borrow = function (book, userId) {\r\n        var index = this.books.findIndex(function (b) { return b.getTitle() === book.getTitle() && b.getAuthor() === book.getAuthor() && b.getYear() === book.getYear(); });\r\n        if (index !== -1) {\r\n            this.books[index].borrow(userId);\r\n            this.save();\r\n        }\r\n    };\r\n    BookService.prototype.returnBook = function (book) {\r\n        var index = this.books.findIndex(function (b) { return b.getTitle() === book.getTitle() &&\r\n            b.getAuthor() === book.getAuthor() &&\r\n            b.getYear() === book.getYear(); });\r\n        if (index !== -1) {\r\n            this.books[index].returnBook();\r\n            this.save();\r\n        }\r\n    };\r\n    BookService.prototype.save = function () {\r\n        this.storage.set('books', this.books);\r\n    };\r\n    BookService.prototype.search = function (query) {\r\n        var lowerQuery = query.toLowerCase();\r\n        return this.books.filter(function (b) {\r\n            return b.getTitle().toLowerCase().includes(lowerQuery) ||\r\n                b.getAuthor().toLowerCase().includes(lowerQuery);\r\n        });\r\n    };\r\n    BookService.prototype.remove = function (book) {\r\n        this.books = this.books.filter(function (b) { return b !== book; });\r\n        this.storage.set('books', this.books);\r\n    };\r\n    return BookService;\r\n}());\r\n\r\nvar UserService = (function () {\r\n    function UserService() {\r\n        this.storage = new _storage__WEBPACK_IMPORTED_MODULE_1__.IStorage();\r\n        this.users = [];\r\n        var saved = this.storage.get('users');\r\n        if (saved) {\r\n            this.users = saved.map(function (u) { return new _models__WEBPACK_IMPORTED_MODULE_0__.User(u.name, u.email); });\r\n        }\r\n    }\r\n    UserService.prototype.add = function (user) {\r\n        this.users.push(user);\r\n        this.save();\r\n    };\r\n    UserService.prototype.getAll = function () {\r\n        return __spreadArray([], this.users, true);\r\n    };\r\n    UserService.prototype.save = function () {\r\n        this.storage.set('users', this.users);\r\n    };\r\n    UserService.prototype.remove = function (user) {\r\n        this.users = this.users.filter(function (u) { return u !== user; });\r\n        this.storage.set('users', this.users);\r\n    };\r\n    return UserService;\r\n}());\r\n\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/storage.ts\":\r\n/*!************************!*\\\r\n  !*** ./src/storage.ts ***!\r\n  \\************************/\r\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\r\n\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\r\n/* harmony export */   IStorage: () => (/* binding */ IStorage)\r\n/* harmony export */ });\r\nvar IStorage = (function () {\r\n    function IStorage() {\r\n        this.storage = window.localStorage;\r\n    }\r\n    IStorage.prototype.set = function (key, value) {\r\n        var json = JSON.stringify(value);\r\n        this.storage.setItem(key, json);\r\n    };\r\n    IStorage.prototype.get = function (key) {\r\n        var data = this.storage.getItem(key);\r\n        return data ? JSON.parse(data) : null;\r\n    };\r\n    IStorage.prototype.remove = function (key) {\r\n        this.storage.removeItem(key);\r\n    };\r\n    IStorage.prototype.clear = function () {\r\n        this.storage.clear();\r\n    };\r\n    IStorage.prototype.has = function (key) {\r\n        return this.storage.getItem(key) !== null;\r\n    };\r\n    return IStorage;\r\n}());\r\n\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/styles/main.scss\":\r\n/*!******************************!*\\\r\n  !*** ./src/styles/main.scss ***!\r\n  \\******************************/\r\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\r\n\r\n__webpack_require__.r(__webpack_exports__);\r\n// extracted by mini-css-extract-plugin\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/validation.ts\":\r\n/*!***************************!*\\\r\n  !*** ./src/validation.ts ***!\r\n  \\***************************/\r\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\r\n\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\r\n/* harmony export */   Validation: () => (/* binding */ Validation)\r\n/* harmony export */ });\r\nvar Validation;\r\n(function (Validation) {\r\n    function required(value) {\r\n        return value.trim().length > 0;\r\n    }\r\n    Validation.required = required;\r\n    function isNumber(value) {\r\n        return /^\\d+$/.test(value);\r\n    }\r\n    Validation.isNumber = isNumber;\r\n    function isYear(value) {\r\n        var year = Number(value);\r\n        return !isNaN(year) && year >= 0 && year <= 2025;\r\n    }\r\n    Validation.isYear = isYear;\r\n    function isEmail(value) {\r\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\r\n    }\r\n    Validation.isEmail = isEmail;\r\n})(Validation || (Validation = {}));\r\n\r\n\r\n/***/ })\r\n\r\n/******/ \t});\r\n/************************************************************************/\r\n/******/ \t// The module cache\r\n/******/ \tvar __webpack_module_cache__ = {};\r\n/******/ \t\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\r\n/******/ \t\tif (cachedModule !== undefined) {\r\n/******/ \t\t\treturn cachedModule.exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\r\n/******/ \t\t\t// no module.id needed\r\n/******/ \t\t\t// no module.loaded needed\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/ \t\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\r\n/******/ \t\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/ \t\r\n/************************************************************************/\r\n/******/ \t/* webpack/runtime/define property getters */\r\n/******/ \t(() => {\r\n/******/ \t\t// define getter functions for harmony exports\r\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\r\n/******/ \t\t\tfor(var key in definition) {\r\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\r\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t};\r\n/******/ \t})();\r\n/******/ \t\r\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\r\n/******/ \t(() => {\r\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\r\n/******/ \t})();\r\n/******/ \t\r\n/******/ \t/* webpack/runtime/make namespace object */\r\n/******/ \t(() => {\r\n/******/ \t\t// define __esModule on exports\r\n/******/ \t\t__webpack_require__.r = (exports) => {\r\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t\t}\r\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t\t};\r\n/******/ \t})();\r\n/******/ \t\r\n/************************************************************************/\r\nvar __webpack_exports__ = {};\r\n// This entry needs to be wrapped in an IIFE because it needs to be isolated against other modules in the chunk.\r\n(() => {\r\n/*!********************!*\\\r\n  !*** ./src/app.ts ***!\r\n  \\********************/\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./models */ \"./src/models.ts\");\r\n/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services */ \"./src/services.ts\");\r\n/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validation */ \"./src/validation.ts\");\r\n/* harmony import */ var bootstrap_dist_css_bootstrap_min_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bootstrap/dist/css/bootstrap.min.css */ \"./node_modules/bootstrap/dist/css/bootstrap.min.css\");\r\n/* harmony import */ var _styles_main_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./styles/main.scss */ \"./src/styles/main.scss\");\r\n\r\n\r\n\r\n\r\n\r\nvar App = (function () {\r\n    function App() {\r\n        this.bookService = new _services__WEBPACK_IMPORTED_MODULE_1__.BookService();\r\n        this.userService = new _services__WEBPACK_IMPORTED_MODULE_1__.UserService();\r\n        this.currentBookToBorrow = null;\r\n        this.currentPage = 1;\r\n        this.itemsPerPage = 5;\r\n        this.bindForms();\r\n        this.renderBooks();\r\n        this.bindSearch();\r\n        this.renderUsers();\r\n    }\r\n    App.prototype.notify = function (message, type) {\r\n        if (type === void 0) { type = \"info\"; }\r\n        var container = document.getElementById(\"notifications\");\r\n        var toast = document.createElement(\"div\");\r\n        toast.className = \"toast align-items-center text-white bg-\".concat(type, \" border-0 mb-2\");\r\n        toast.role = \"alert\";\r\n        toast.setAttribute(\"aria-live\", \"assertive\");\r\n        toast.setAttribute(\"aria-atomic\", \"true\");\r\n        toast.innerHTML = \"\\n            <div class=\\\"d-flex\\\">\\n                <div class=\\\"toast-body\\\">\".concat(message, \"</div>\\n                <button type=\\\"button\\\" class=\\\"btn-close btn-close-white me-2 m-auto\\\" data-bs-dismiss=\\\"toast\\\" aria-label=\\\"Close\\\"></button>\\n            </div>\\n        \");\r\n        container.appendChild(toast);\r\n        var bsToast = new window.bootstrap.Toast(toast, { delay: 3000 });\r\n        bsToast.show();\r\n        toast.addEventListener('hidden.bs.toast', function () { return toast.remove(); });\r\n    };\r\n    App.prototype.bindModalButtons = function () {\r\n        var _this = this;\r\n        var confirmBtn = document.getElementById(\"confirmBorrowBtn\");\r\n        var modalEl = document.getElementById(\"borrowModal\");\r\n        confirmBtn.addEventListener(\"click\", function () {\r\n            var _a;\r\n            var input = document.getElementById(\"borrowUserId\");\r\n            var userId = Number(input.value);\r\n            if (isNaN(userId)) {\r\n                _this.showNotification(\"Введіть коректний числовий ID користувача!\", \"danger\");\r\n                return;\r\n            }\r\n            var user = _this.userService.getAll().find(function (u) { return u.getId() === userId; });\r\n            if (!user) {\r\n                _this.showNotification(\"Користувача з таким ID не знайдено!\", \"danger\");\r\n                return;\r\n            }\r\n            if (!_this.currentBookToBorrow)\r\n                return;\r\n            var borrowedBooksCount = _this.bookService.getAll().filter(function (b) { return b.getBorrowedBy() === userId; }).length;\r\n            if (borrowedBooksCount >= 3) {\r\n                _this.showNotification(\"Користувач не може позичити більше 3 книг!\", \"danger\");\r\n                return;\r\n            }\r\n            _this.bookService.borrow(_this.currentBookToBorrow, userId);\r\n            _this.showNotification(\"\\u041A\\u043D\\u0438\\u0433\\u0430 \\\"\".concat(_this.currentBookToBorrow.getTitle(), \"\\\" \\u0443\\u0441\\u043F\\u0456\\u0448\\u043D\\u043E \\u043F\\u043E\\u0437\\u0438\\u0447\\u0435\\u043D\\u0430 \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0443 #\").concat(userId), \"success\");\r\n            _this.currentBookToBorrow = null;\r\n            _this.renderBooks();\r\n            input.value = \"\";\r\n            (_a = window.bootstrap.Modal.getInstance(modalEl)) === null || _a === void 0 ? void 0 : _a.hide();\r\n        });\r\n    };\r\n    App.prototype.handleAddBook = function (event) {\r\n        event.preventDefault();\r\n        var titleInput = document.getElementById(\"bookTitle\");\r\n        var authorInput = document.getElementById(\"bookAuthor\");\r\n        var yearInput = document.getElementById(\"bookYear\");\r\n        var titleError = document.getElementById(\"bookTitleError\");\r\n        var authorError = document.getElementById(\"bookAuthorError\");\r\n        var yearError = document.getElementById(\"bookYearError\");\r\n        titleInput.classList.remove(\"is-invalid\");\r\n        authorInput.classList.remove(\"is-invalid\");\r\n        yearInput.classList.remove(\"is-invalid\");\r\n        titleError.textContent = \"\";\r\n        authorError.textContent = \"\";\r\n        yearError.textContent = \"\";\r\n        var hasError = false;\r\n        var title = titleInput.value.trim();\r\n        var author = authorInput.value.trim();\r\n        var year = yearInput.value.trim();\r\n        if (!_validation__WEBPACK_IMPORTED_MODULE_2__.Validation.required(title)) {\r\n            titleInput.classList.add(\"is-invalid\");\r\n            titleError.textContent = \"Назва книги обов'язкова!\";\r\n            hasError = true;\r\n        }\r\n        if (!_validation__WEBPACK_IMPORTED_MODULE_2__.Validation.required(author)) {\r\n            authorInput.classList.add(\"is-invalid\");\r\n            authorError.textContent = \"Автор обов'язковий!\";\r\n            hasError = true;\r\n        }\r\n        if (!_validation__WEBPACK_IMPORTED_MODULE_2__.Validation.required(year)) {\r\n            yearInput.classList.add(\"is-invalid\");\r\n            yearError.textContent = \"Рік видання обов'язковий!\";\r\n            hasError = true;\r\n        }\r\n        else if (!_validation__WEBPACK_IMPORTED_MODULE_2__.Validation.isNumber(year)) {\r\n            yearInput.classList.add(\"is-invalid\");\r\n            yearError.textContent = \"Рік видання має бути числом!\";\r\n            hasError = true;\r\n        }\r\n        else if (!_validation__WEBPACK_IMPORTED_MODULE_2__.Validation.isYear(year)) {\r\n            yearInput.classList.add(\"is-invalid\");\r\n            yearError.textContent = \"Введіть коректний рік (1000–2999)!\";\r\n            hasError = true;\r\n        }\r\n        if (hasError)\r\n            return;\r\n        var book = new _models__WEBPACK_IMPORTED_MODULE_0__.Book(title, author, Number(year));\r\n        this.bookService.add(book);\r\n        this.renderBooks();\r\n        event.target.reset();\r\n    };\r\n    App.prototype.handleAddUser = function (event) {\r\n        event.preventDefault();\r\n        var nameInput = document.getElementById(\"userName\");\r\n        var emailInput = document.getElementById(\"userEmail\");\r\n        var nameError = document.getElementById(\"userNameError\");\r\n        var emailError = document.getElementById(\"userEmailError\");\r\n        nameInput.classList.remove(\"is-invalid\");\r\n        emailInput.classList.remove(\"is-invalid\");\r\n        nameError.textContent = \"\";\r\n        emailError.textContent = \"\";\r\n        var hasError = false;\r\n        var name = nameInput.value.trim();\r\n        var email = emailInput.value.trim();\r\n        if (!_validation__WEBPACK_IMPORTED_MODULE_2__.Validation.required(name)) {\r\n            nameInput.classList.add(\"is-invalid\");\r\n            nameError.textContent = \"Ім'я користувача обов'язкове!\";\r\n            hasError = true;\r\n        }\r\n        if (!_validation__WEBPACK_IMPORTED_MODULE_2__.Validation.required(email)) {\r\n            emailInput.classList.add(\"is-invalid\");\r\n            emailError.textContent = \"Email обов'язковий!\";\r\n            hasError = true;\r\n        }\r\n        else if (!_validation__WEBPACK_IMPORTED_MODULE_2__.Validation.isEmail(email)) {\r\n            emailInput.classList.add(\"is-invalid\");\r\n            emailError.textContent = \"Введіть коректний Email!\";\r\n            hasError = true;\r\n        }\r\n        if (hasError)\r\n            return;\r\n        var newUser = new _models__WEBPACK_IMPORTED_MODULE_0__.User(name, email);\r\n        this.userService.add(newUser);\r\n        this.renderUsers();\r\n        event.target.reset();\r\n    };\r\n    App.prototype.bindSearch = function () {\r\n        var _this = this;\r\n        var searchBtn = document.getElementById(\"searchBtn\");\r\n        var searchInput = document.getElementById(\"searchQuery\");\r\n        searchBtn.addEventListener(\"click\", function () {\r\n            var query = searchInput.value.trim();\r\n            if (!query) {\r\n                _this.renderBooks();\r\n                return;\r\n            }\r\n            var results = _this.bookService.search(query);\r\n            _this.renderBooks(results);\r\n        });\r\n    };\r\n    App.prototype.renderBooks = function (books) {\r\n        var _this = this;\r\n        if (books === void 0) { books = this.bookService.getAll(); }\r\n        var booksList = document.getElementById(\"booksList\");\r\n        booksList.innerHTML = \"\";\r\n        var totalItems = books.length;\r\n        var totalPages = Math.ceil(totalItems / this.itemsPerPage);\r\n        var startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n        var endIndex = startIndex + this.itemsPerPage;\r\n        var pageBooks = books.slice(startIndex, endIndex);\r\n        pageBooks.forEach(function (book) {\r\n            var li = document.createElement(\"li\");\r\n            li.className = \"list-group-item d-flex justify-content-between align-items-center\";\r\n            var span = document.createElement(\"span\");\r\n            span.textContent = book.toString();\r\n            li.appendChild(span);\r\n            var btnGroup = document.createElement(\"div\");\r\n            btnGroup.className = \"d-flex\";\r\n            var borrowBtn = document.createElement(\"button\");\r\n            borrowBtn.className = book.isBorrowed() ? \"btn btn-sm btn-warning me-2\" : \"btn btn-sm btn-primary me-2\";\r\n            borrowBtn.textContent = book.isBorrowed() ? \"Повернути\" : \"Позичити\";\r\n            borrowBtn.addEventListener(\"click\", function () { return _this.handleBorrowReturn(book, borrowBtn); });\r\n            btnGroup.appendChild(borrowBtn);\r\n            var deleteBtn = document.createElement(\"button\");\r\n            deleteBtn.className = \"btn btn-sm btn-danger\";\r\n            deleteBtn.textContent = \"Видалити\";\r\n            deleteBtn.addEventListener(\"click\", function () {\r\n                _this.bookService.remove(book);\r\n                _this.renderBooks();\r\n                _this.notify(\"\\u041A\\u043D\\u0438\\u0433\\u0430 \\\"\".concat(book.getTitle(), \"\\\" \\u0432\\u0438\\u0434\\u0430\\u043B\\u0435\\u043D\\u0430\"), \"danger\");\r\n            });\r\n            btnGroup.appendChild(deleteBtn);\r\n            li.appendChild(btnGroup);\r\n            booksList.appendChild(li);\r\n        });\r\n        this.renderBookPagination(totalPages);\r\n    };\r\n    App.prototype.renderBookPagination = function (totalPages) {\r\n        var _this = this;\r\n        var pagination = document.getElementById(\"booksPagination\");\r\n        pagination.innerHTML = \"\";\r\n        if (totalPages <= 1)\r\n            return;\r\n        var nav = document.createElement(\"nav\");\r\n        var ul = document.createElement(\"ul\");\r\n        ul.className = \"pagination justify-content-center mt-3\";\r\n        var _loop_1 = function (i) {\r\n            var li = document.createElement(\"li\");\r\n            li.className = \"page-item \".concat(i === this_1.currentPage ? \"active\" : \"\");\r\n            var btn = document.createElement(\"button\");\r\n            btn.className = \"page-link\";\r\n            btn.textContent = i.toString();\r\n            btn.addEventListener(\"click\", function () {\r\n                _this.currentPage = i;\r\n                _this.renderBooks();\r\n            });\r\n            li.appendChild(btn);\r\n            ul.appendChild(li);\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 1; i <= totalPages; i++) {\r\n            _loop_1(i);\r\n        }\r\n        nav.appendChild(ul);\r\n        pagination.appendChild(nav);\r\n    };\r\n    App.prototype.renderUsers = function (users) {\r\n        var _this = this;\r\n        var usersList = document.getElementById(\"usersList\");\r\n        usersList.innerHTML = \"\";\r\n        (users !== null && users !== void 0 ? users : this.userService.getAll()).forEach(function (user) {\r\n            var li = document.createElement(\"li\");\r\n            li.className = \"list-group-item d-flex justify-content-between align-items-center\";\r\n            var span = document.createElement(\"span\");\r\n            span.textContent = user.toString();\r\n            li.appendChild(span);\r\n            var btnDelete = document.createElement(\"button\");\r\n            btnDelete.className = \"btn btn-sm btn-danger\";\r\n            btnDelete.textContent = \"Видалити\";\r\n            btnDelete.addEventListener(\"click\", function () {\r\n                _this.bookService.getAll().forEach(function (book) {\r\n                    if (book.getBorrowedBy() === user.getId()) {\r\n                        book.returnBook();\r\n                    }\r\n                });\r\n                _this.bookService.save();\r\n                _this.userService.remove(user);\r\n                _this.showNotification(\"\\u041A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447 \\\"\".concat(user.getName(), \"\\\" \\u0432\\u0438\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0439. \\u0423\\u0441\\u0456 \\u0439\\u043E\\u0433\\u043E \\u043A\\u043D\\u0438\\u0433\\u0438 \\u043F\\u043E\\u0432\\u0435\\u0440\\u043D\\u0435\\u043D\\u0456.\"), \"danger\");\r\n                _this.renderUsers();\r\n                _this.renderBooks();\r\n            });\r\n            li.appendChild(btnDelete);\r\n            usersList.appendChild(li);\r\n        });\r\n    };\r\n    App.prototype.bindForms = function () {\r\n        var _this = this;\r\n        var bookForm = document.getElementById(\"bookForm\");\r\n        var userForm = document.getElementById(\"userForm\");\r\n        bookForm.addEventListener(\"submit\", function (e) { return _this.handleAddBook(e); });\r\n        userForm.addEventListener(\"submit\", function (e) { return _this.handleAddUser(e); });\r\n    };\r\n    App.prototype.showNotification = function (message, title) {\r\n        if (title === void 0) { title = \"Повідомлення\"; }\r\n        var modalEl = document.getElementById(\"notificationModal\");\r\n        var modalTitle = document.getElementById(\"notificationTitle\");\r\n        var modalBody = document.getElementById(\"notificationBody\");\r\n        modalTitle.textContent = title;\r\n        modalBody.textContent = message;\r\n        var modal = new window.bootstrap.Modal(modalEl);\r\n        modal.show();\r\n    };\r\n    App.prototype.handleBorrowReturn = function (book, btn) {\r\n        if (book.isBorrowed()) {\r\n            this.bookService.returnBook(book);\r\n            btn.textContent = \"Позичити\";\r\n            btn.className = \"btn btn-sm btn-primary me-2\";\r\n            this.notify(\"\\u041A\\u043D\\u0438\\u0433\\u0430 \\\"\".concat(book.getTitle(), \"\\\" \\u043F\\u043E\\u0432\\u0435\\u0440\\u043D\\u0435\\u043D\\u0430\"), \"info\");\r\n        }\r\n        else {\r\n            this.currentBookToBorrow = book;\r\n            var modalEl = document.getElementById(\"borrowModal\");\r\n            if (!modalEl)\r\n                return;\r\n            var modal = new window.bootstrap.Modal(modalEl);\r\n            modal.show();\r\n        }\r\n    };\r\n    return App;\r\n}());\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    var app = new App();\r\n    app.bindModalButtons();\r\n});\r\n\r\n})();\r\n\r\n/******/ })()\r\n;\r\n//# sourceMappingURL=bundle.js.map
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dist/bundle.js b/dist/bundle.js
--- a/dist/bundle.js	(revision 354779eadc43f8b79412f2a614327bf1d3205388)
+++ b/dist/bundle.js	(date 1757924928540)
@@ -186,6 +186,7 @@
         if (saved) {
             this.users = saved.map(function (u) { return new _models__WEBPACK_IMPORTED_MODULE_0__.User(u.name, u.email); });
         }
+        console.log(this.users);
     }
     UserService.prototype.add = function (user) {
         this.users.push(user);
@@ -403,7 +404,7 @@
                 _this.showNotification("Введіть коректний числовий ID користувача!", "danger");
                 return;
             }
-            var user = _this.userService.getAll().find(function (u) { return u.getId() === userId; });
+            var user = _this.userService.getAll().find(function (u) { return u.getId() === Number(userId); });
             if (!user) {
                 _this.showNotification("Користувача з таким ID не знайдено!", "danger");
                 return;
@@ -631,8 +632,19 @@
         var modalBody = document.getElementById("notificationBody");
         modalTitle.textContent = title;
         modalBody.textContent = message;
-        var modal = new window.bootstrap.Modal(modalEl);
+        var modal = window.bootstrap.Modal.getInstance(modalEl);
+        if (!modal) {
+            modal = new window.bootstrap.Modal(modalEl, {
+                backdrop: true,
+                keyboard: true
+            });
+        }
         modal.show();
+        modalEl.addEventListener("hidden.bs.modal", function () {
+            document.querySelectorAll(".modal-backdrop").forEach(function (el) { return el.remove(); });
+            document.body.classList.remove("modal-open");
+            document.body.style.removeProperty("padding-right");
+        }, { once: true });
     };
     App.prototype.handleBorrowReturn = function (book, btn) {
         if (book.isBorrowed()) {
